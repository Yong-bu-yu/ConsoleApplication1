        public class MyCollection:NameObjectCollectionBase
        {
            private DictionaryEntry _de = new DictionaryEntry();
            public MyCollection() { }
            //Adds elements from an IDictionary into the new collection.
            public MyCollection(IDictionary d,Boolean bReadOnly)
            {
                foreach (DictionaryEntry de in d)
                    this.BaseAdd((String)de.Key, de.Value);
                this.IsReadOnly = bReadOnly;
            }
            //Gets a key-and-value pair (DictionaryEntry) using an index.
            public DictionaryEntry this[int index]
            {
                get
                {
                    _de.Key = this.BaseGetKey(index);
                    _de.Value = this.BaseGet(index);
                    return (_de);
                }
            }
            //Gets or sets the value associated with the specified key.
            public Object this[String key]
            {
                get
                {
                    return (this.BaseGet(key));
                }
                set
                {
                    this.BaseSet(key, value);
                }
            }
            public void Add(string key,object value)
            {
                this.BaseAdd(key, value);
            }
            public void Remove(String key)
            {
                this.BaseRemove(key);
            }
            public void Remove(int index)
            {
                this.BaseRemoveAt(index);
            }
            public void Clear()
            {
                this.BaseClear();
            }
        }
